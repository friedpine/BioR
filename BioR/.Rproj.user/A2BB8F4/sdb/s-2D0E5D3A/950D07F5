{
    "contents" : "library(RODBC)\nlibrary(gplots)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(matrixStats)\n\n\nnonzero_std_mean = function(x,low_cut,low_cell_number,rec){\n  x = as.matrix(x)\n  data_nonzero = x[rowSums(x>=low_cut)>=low_cell_number,]\n  df_out = data.frame(Mean=rowMeans(data_nonzero),Sd=rowSds(data_nonzero))\n  df_out$log10 = log10(df_out$Mean)\n  df_out$CV = df_out$Sd/df_out$Mean\n  df_out$rec=rec\n  return(df_out)\n}\n\nget_3_sigma_line = function(data,xmin,xmax,segs,rec){\n  flank_length = (xmax-xmin)/(2*segs)\n  poses = (1:segs*2-1)*flank_length+xmin\n  df = data.frame(id=1:segs,poses=poses)\n  data$group=as.integer((data$log10-poses[1]+flank_length)/(flank_length*2))+1\n  CV_M_std = ddply(data,c(\"group\"),summarize,CV_mean=mean(CV),CV_sd=sd(CV))\n  CV_M_std = subset(CV_M_std,group %in% df$id)\n  df$CV_3std = CV_M_std$CV_mean+3*CV_M_std$CV_sd\n  model.res = glm(formula = CV_3std ~ poses, family = poisson, data = df)\n  df$esti = model.res$fitted.values\n  df$rec = rec\n  return(df)\n}\n\nrandom_group_cells_get_3sigma_line = function(data,group_size,group_count){\n  total_samples = length(data[1,])\n  sample_info = sapply(1:group_count,function(x) sample(1:total_samples,group_size))\n  transform_mat = matrix(0,total_samples,group_count)\n  for (i in 1:group_count){\n    for (j in sample_info[,i]){\n      transform_mat[j,i]=1/group_size\n    }\n  }\n  data_group = as.matrix(data) %*% transform_mat\n  return(get_3_sigma_line(nonzero_std_mean(data_group,'8pg'),0,3.6,18))\n}\n\nplot_scatter_3sigma = function(datas,counts,recs,ymax,filename){\n  CVs = lapply(1:counts,function(x) nonzero_std_mean(datas[[x]],1,2,recs[x]))\n  CVs_stat = lapply(1:counts,function(x) get_3_sigma_line(CVs[[x]],0,3.6,18,recs[x]))\n  df_CVs_stat = ldply(CVs_stat,data.frame)\n  df_CVs = ldply(CVs,data.frame)\n  pdf(filename,width=15,height=15)\n  print(ggplot(df_CVs,aes(log10,CV))+\n    geom_point(aes(color=rec))+\n    geom_line(data=df_CVs_stat,aes(poses,CV_3std,size=1,color=rec))+\n    ylim(0,ymax))\n  dev.off()\n#  return(list(df_CVs,df_CVs_stat))\n}\n\n",
    "created" : 1408249244589.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3372660338",
    "id" : "950D07F5",
    "lastKnownWriteTime" : 1408281932,
    "path" : "~/GitHub/BioR/BioR/CV_regerssion.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}